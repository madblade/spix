{"version":3,"sources":["../../../../../../../server/app/engine/game3d/engine_topology/updater/updater_block.js"],"names":[],"mappings":";;;;AAIA;;;;;;;;;;;;;;AAEA;;;;;;IAEM;;;;;;;2CAEwB,eAAe,OAAO,GAAG,GAAG,GAAG;AACrD,0BAAc,CAAd,EAAiB,MAAjB,CAAwB,cAAc,CAAd,EAAiB,OAAjB,CAAyB,MAAM,KAAN,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAzB,CAAxB,EADqD;;;;wCAIlC,eAAe,OAAO,GAAG,GAAG,GAAG;AAClD,gBAAM,KAAK,MAAM,KAAN,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAL,CAD4C;AAElD,gBAAI,CAAC,cAAc,cAAd,CAA6B,CAA7B,CAAD,EAAkC,cAAc,CAAd,IAAmB,CAAC,EAAD,CAAnB,CAAtC,KACK,sBAAgB,MAAhB,CAAuB,EAAvB,EAA2B,cAAc,CAAd,CAA3B,EADL;;;;;;;yDAKoC,OAAO,IAAI,GAAG,GAAG,GAAG;AACxD,gBAAI,gBAAgB,MAAM,aAAN,CADoC;AAExD,gBAAI,aAAa,MAAM,UAAN,CAFuC;AAGxD,gBAAI,KAAK,KAAL,CAHoD,IAGpC,KAAK,KAAL,CAHoC;AAIxD,gBAAI,KAAK,KAAL,CAJoD,IAIpC,KAAK,KAAL,CAJoC;AAKxD,gBAAI,KAAK,KAAL,CALoD,IAKpC,KAAK,KAAL;;;AALoC,gBAQpD,IAAI,CAAJ,EAAO;AACP,oBAAI,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,CAAvB,CAAJ,EAA+B;AAC3B,yBAAK,IAAL,CAD2B;AAE3B,wBAAI,CAAC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,IAAE,CAAF,EAAK,CAAzB,CAAT,CAAD,KAA2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,IAAE,CAAF,EAAK,CAAzB,CAAtB,CAA3C,KACC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,IAAE,CAAF,CAAhC,CADD,KAC2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,IAAE,CAAF,CAA7C,CAD3C,KAEC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,CAAvB,CAAT,CAFD,EAGA,aAAa,kBAAb,CAAgC,aAAhC,EAA+C,KAA/C,EAAsD,IAAE,CAAF,EAAK,CAA3D,EAA8D,CAA9D,EAHJ;iBAFJ;aADJ;;AAUA,gBAAI,IAAI,WAAW,CAAX,CAAJ,EAAmB;AACnB,oBAAI,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,CAAvB,CAAJ,EAA+B;AAC3B,yBAAK,IAAL,CAD2B;AAE3B,wBAAI,CAAC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,IAAE,CAAF,EAAK,CAAzB,CAAT,CAAD,KAA2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,IAAE,CAAF,EAAK,CAAzB,CAAtB,CAA3C,KACC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,IAAE,CAAF,CAAhC,CADD,KAC2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,IAAE,CAAF,CAA7C,CAD3C,KAEC,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,CAAvB,CAAtB,CAFD,EAGA,aAAa,kBAAb,CAAgC,aAAhC,EAA+C,KAA/C,EAAsD,IAAE,CAAF,EAAK,CAA3D,EAA8D,CAA9D,EAHJ;iBAFJ;aADJ;;;AAlBwD,gBA6BpD,IAAI,CAAJ,EAAO;AACP,oBAAI,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,CAAvB,CAAJ,EAA+B;AAC3B,yBAAK,IAAL,CAD2B;AAE3B,wBAAI,CAAC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,IAAE,CAAF,EAAK,CAAzB,CAAT,CAAD,KAA2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,IAAE,CAAF,EAAK,CAAzB,CAAtB,CAA3C,KACC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,IAAE,CAAF,CAAhC,CADD,KAC2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,IAAE,CAAF,CAA7C,CAD3C,KAEC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,CAAvB,CAAT,CAFD,EAGA,aAAa,kBAAb,CAAgC,aAAhC,EAA+C,KAA/C,EAAsD,CAAtD,EAAyD,IAAE,CAAF,EAAK,CAA9D,EAHJ;iBAFJ;aADJ;AASA,gBAAI,IAAI,WAAW,CAAX,CAAJ,EAAmB;AACnB,oBAAI,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,CAAvB,CAAJ,EAA+B;AAC3B,yBAAK,IAAL,CAD2B;AAE3B,wBAAI,CAAC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,IAAE,CAAF,EAAK,CAAzB,CAAT,CAAD,KAA2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,IAAE,CAAF,EAAK,CAAzB,CAAtB,CAA3C,KACC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,IAAE,CAAF,CAAhC,CADD,KAC2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,IAAE,CAAF,CAA3C,CAD3C,KAEC,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,CAAvB,CAAtB,CAFD,EAGA,aAAa,kBAAb,CAAgC,aAAhC,EAA+C,KAA/C,EAAsD,CAAtD,EAAyD,IAAE,CAAF,EAAK,CAA9D,EAHJ;iBAFJ;aADJ;;;AAtCwD,gBAiDpD,IAAI,CAAJ,EAAO;AACP,oBAAI,MAAM,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,IAAE,CAAF,CAAzB,EAA+B;AAC3B,yBAAK,IAAL,CAD2B;AAE3B,wBAAI,CAAC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,IAAE,CAAF,CAAhC,CAAD,KAA2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,IAAE,CAAF,CAA7C,CAA3C,KACC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,IAAE,CAAF,CAAhC,CADD,KAC2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,IAAE,CAAF,CAA7C,CAD3C,KAEC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,IAAE,CAAF,CAA9B,CAFD,EAGA,aAAa,kBAAb,CAAgC,aAAhC,EAA+C,KAA/C,EAAsD,CAAtD,EAAyD,CAAzD,EAA4D,IAAE,CAAF,CAA5D,CAHJ;iBAFJ;aADJ;AASA,gBAAI,IAAI,WAAW,CAAX,CAAJ,EAAmB;AACnB,oBAAI,MAAM,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,IAAE,CAAF,CAAzB,EAA+B;AAC3B,yBAAK,IAAL,CAD2B;AAE3B,wBAAI,CAAC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,IAAE,CAAF,CAAhC,CAAD,KAA2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,IAAE,CAAF,CAA7C,CAA3C,KACC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,IAAE,CAAF,CAAhC,CADD,KAC2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,IAAE,CAAF,CAA7C,CAD3C,KAEC,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,IAAE,CAAF,CAA3C,CAFD,EAGA,aAAa,kBAAb,CAAgC,aAAhC,EAA+C,KAA/C,EAAsD,CAAtD,EAAyD,CAAzD,EAA4D,IAAE,CAAF,CAA5D,CAHJ;iBAFJ;aADJ;;;AA1DwD,gBAqEpD,EAAE,MAAM,EAAN,IAAY,EAAZ,IAAkB,EAAlB,IAAwB,EAAxB,IAA8B,EAA9B,CAAF,EAAqC,aAAa,eAAb,CAA6B,aAA7B,EAA4C,KAA5C,EAAmD,CAAnD,EAAsD,CAAtD,EAAyD,CAAzD,EAAzC;;;;;;;yDAIoC,OAAO,IAAI,GAAG,GAAG,GAAG;AACxD,gBAAI,gBAAgB,MAAM,aAAN,CADoC;AAExD,gBAAI,aAAa,MAAM,UAAN,CAFuC;AAGxD,gBAAI,KAAK,KAAL,CAHoD,IAGpC,KAAK,KAAL,CAHoC;AAIxD,gBAAI,KAAK,KAAL,CAJoD,IAIpC,KAAK,KAAL,CAJoC;AAKxD,gBAAI,KAAK,KAAL,CALoD,IAKpC,KAAK,KAAL;;;AALoC,gBAQpD,IAAI,CAAJ,EAAO;AACP,oBAAI,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,CAAvB,CAAJ,EAA+B;AAC3B,yBAAK,IAAL,CAD2B;AAE3B,wBAAI,CAAC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,IAAE,CAAF,EAAK,CAAzB,CAAT,CAAD,KAA2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,IAAE,CAAF,EAAK,CAAzB,CAAtB,CAA3C,KACC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,IAAE,CAAF,CAAhC,CADD,KAC2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,IAAE,CAAF,CAA7C,CAD3C,KAEC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,CAAvB,CAAT,CAFD,EAGA,aAAa,eAAb,CAA6B,aAA7B,EAA4C,KAA5C,EAAmD,IAAE,CAAF,EAAK,CAAxD,EAA2D,CAA3D,EAHJ;iBAFJ;aADJ;AASA,gBAAI,IAAI,WAAW,CAAX,CAAJ,EAAmB;AACnB,oBAAI,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,CAAvB,CAAJ,EAA+B;AAC3B,yBAAK,IAAL,CAD2B;AAE3B,wBAAI,CAAC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,IAAE,CAAF,EAAK,CAAzB,CAAT,CAAD,KAA2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,IAAE,CAAF,EAAK,CAAzB,CAAtB,CAA3C,KACC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,IAAE,CAAF,CAAhC,CADD,KAC2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,IAAE,CAAF,CAA7C,CAD3C,KAEC,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,CAAvB,CAAtB,CAFD,EAGA,aAAa,eAAb,CAA6B,aAA7B,EAA4C,KAA5C,EAAmD,IAAE,CAAF,EAAK,CAAxD,EAA2D,CAA3D,EAHJ;iBAFJ;aADJ;;;AAjBwD,gBA4BpD,IAAI,CAAJ,EAAO;AACP,oBAAI,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,CAAvB,CAAJ,EAA+B;AAC3B,yBAAK,IAAL,CAD2B;AAE3B,wBAAI,CAAC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,IAAE,CAAF,EAAK,CAAzB,CAAT,CAAD,KAA2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,IAAE,CAAF,EAAK,CAAzB,CAAtB,CAA3C,KACC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,IAAE,CAAF,CAAhC,CADD,KAC2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,IAAE,CAAF,CAA7C,CAD3C,KAEC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,CAAvB,CAAT,CAFD,EAGA,aAAa,eAAb,CAA6B,aAA7B,EAA4C,KAA5C,EAAmD,CAAnD,EAAsD,IAAE,CAAF,EAAK,CAA3D,EAHJ;iBAFJ;aADJ;AASA,gBAAI,IAAI,WAAW,CAAX,CAAJ,EAAmB;AACnB,oBAAI,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,CAAvB,CAAJ,EAA+B;AAC3B,yBAAK,IAAL,CAD2B;AAE3B,wBAAI,CAAC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,IAAE,CAAF,EAAK,CAAzB,CAAT,CAAD,KAA2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,IAAE,CAAF,EAAK,CAAzB,CAAtB,CAA3C,KACC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,IAAE,CAAF,CAAhC,CADD,KAC2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,IAAE,CAAF,CAA7C,CAD3C,KAEC,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,CAAvB,CAAtB,CAFD,EAGA,aAAa,eAAb,CAA6B,aAA7B,EAA4C,KAA5C,EAAmD,CAAnD,EAAsD,IAAE,CAAF,EAAK,CAA3D,EAHJ;iBAFJ;aADJ;;;AArCwD,gBAgDpD,IAAI,CAAJ,EAAO;AACP,oBAAI,MAAM,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,IAAE,CAAF,CAAzB,EAA+B;AAC3B,yBAAK,IAAL,CAD2B;AAE3B,wBAAI,CAAC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,IAAE,CAAF,CAAhC,CAAD,KAA2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,IAAE,CAAF,CAA7C,CAA3C,KACC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,IAAE,CAAF,CAAhC,CADD,KAC2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,IAAE,CAAF,CAA7C,CAD3C,KAEC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,IAAE,CAAF,CAA9B,CAFD,EAGA,aAAa,eAAb,CAA6B,aAA7B,EAA4C,KAA5C,EAAmD,CAAnD,EAAsD,CAAtD,EAAyD,IAAE,CAAF,CAAzD,CAHJ;iBAFJ;aADJ;AASA,gBAAI,IAAI,WAAW,CAAX,CAAJ,EAAmB;AACnB,oBAAI,MAAM,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,IAAE,CAAF,CAAzB,EAA+B;AAC3B,yBAAK,IAAL,CAD2B;AAE3B,wBAAI,CAAC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,IAAE,CAAF,CAAhC,CAAD,KAA2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,IAAE,CAAF,EAAK,CAApB,EAAuB,IAAE,CAAF,CAA7C,CAA3C,KACC,IAAE,CAAF,GAAI,CAAJ,IAAS,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,IAAE,CAAF,CAAhC,CADD,KAC2C,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,CAAf,EAAkB,IAAE,CAAF,EAAK,IAAE,CAAF,CAA7C,CAD3C,KAEC,IAAE,CAAF,IAAK,WAAW,CAAX,CAAL,IAAsB,MAAM,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,IAAE,CAAF,CAA3C,CAFD,EAGA,aAAa,eAAb,CAA6B,aAA7B,EAA4C,KAA5C,EAAmD,CAAnD,EAAsD,CAAtD,EAAyD,IAAE,CAAF,CAAzD,CAHJ;iBAFJ;aADJ;;;AAzDwD,gBAoEpD,EAAE,MAAM,EAAN,IAAY,EAAZ,IAAkB,EAAlB,IAAwB,EAAxB,IAA8B,EAA9B,CAAF;AACA,6BAAa,kBAAb,CAAgC,aAAhC,EAA+C,KAA/C,EAAsD,CAAtD,EAAyD,CAAzD,EAA4D,CAA5D,EADJ;;;WA1JF;;;kBAgKS","file":"updater_block.js","sourcesContent":["/**\n *\n */\n\n'use strict';\n\nimport CollectionUtils from '../../../math/collections';\n\nclass UpdaterBlock {\n    \n    static removeSurfaceBlock(surfaceBlocks, chunk, x, y, z) {\n        surfaceBlocks[z].splice(surfaceBlocks[z].indexOf(chunk._toId(x, y, z)));\n    }\n\n    static addSurfaceBlock(surfaceBlocks, chunk, x, y, z) {\n        const id = chunk._toId(x, y, z);\n        if (!surfaceBlocks.hasOwnProperty(z)) surfaceBlocks[z] = [id];\n        else CollectionUtils.insert(id, surfaceBlocks[z]);\n    }\n\n    // The difficulty is to keep layered surfaceBlocks sorted.\n    static updateSurfaceBlocksAfterAddition(chunk, id, x, y, z) {\n        let surfaceBlocks = chunk.surfaceBlocks;\n        let dimensions = chunk.dimensions;\n        let xp = false; let xm = false;\n        let yp = false; let ym = false;\n        let zp = false; let zm = false;\n\n        // Update (x+1, x-1) blocks.\n        if (x > 0) {\n            if (chunk.contains(x-1, y, z)) {\n                xm = true;\n                if ((y-1<0 || chunk.contains(x-1, y-1, z)) && (y+1>=dimensions[1] || chunk.contains(x-1, y+1, z)) &&\n                    (z-1<0 || chunk.contains(x-1, y, z-1)) && (z+1>=dimensions[2] || chunk.contains(x-1, y, z+1)) &&\n                    (x-2<0 || chunk.contains(x-2, y, z)))\n                    UpdaterBlock.removeSurfaceBlock(surfaceBlocks, chunk, x-1, y, z);\n            }\n        }\n\n        if (x < dimensions[0]) {\n            if (chunk.contains(x+1, y, z)) {\n                xp = true;\n                if ((y-1<0 || chunk.contains(x+1, y-1, z)) && (y+1>=dimensions[1] || chunk.contains(x+1, y+1, z)) &&\n                    (z-1<0 || chunk.contains(x+1, y, z-1)) && (z+1>=dimensions[2] || chunk.contains(x+1, y, z+1)) &&\n                    (x+2>=dimensions[0] || chunk.contains(x+2, y, z)))\n                    UpdaterBlock.removeSurfaceBlock(surfaceBlocks, chunk, x+1, y, z);\n            }\n        }\n\n        // Update (y+1, y-1) blocks.\n        if (y > 0) {\n            if (chunk.contains(x, y-1, z)) {\n                ym = true;\n                if ((x-1<0 || chunk.contains(x-1, y-1, z)) && (x+1>=dimensions[0] || chunk.contains(x+1, y-1, z)) &&\n                    (z-1<0 || chunk.contains(x, y-1, z-1)) && (z+1>=dimensions[2] || chunk.contains(x, y-1, z+1)) &&\n                    (y-2<0 || chunk.contains(x, y-2, z)))\n                    UpdaterBlock.removeSurfaceBlock(surfaceBlocks, chunk, x, y-1, z);\n            }\n        }\n        if (y < dimensions[1]) {\n            if (chunk.contains(x, y+1, z)) {\n                yp = true;\n                if ((x-1<0 || chunk.contains(x-1, y+1, z)) && (x+1>=dimensions[0] || chunk.contains(x+1, y+1, z)) &&\n                    (z-1<0 || chunk.contains(x, y+1, z-1)) && (z+1>=dimensions[2] || chunk.contains(x, y, z+1)) &&\n                    (y+2>=dimensions[1] || chunk.contains(x, y+2, z)))\n                    UpdaterBlock.removeSurfaceBlock(surfaceBlocks, chunk, x, y+1, z);\n            }\n        }\n\n        // Update (z-1, z+1) blocks.\n        if (z > 0) {\n            if (chunk.contains(x, y, z-1)) {\n                zm = true;\n                if ((x-1<0 || chunk.contains(x-1, y, z-1)) && (x+1>=dimensions[0] || chunk.contains(x+1, y, z-1)) &&\n                    (y-1<0 || chunk.contains(x, y-1, z-1)) && (y+1>=dimensions[1] || chunk.contains(x, y+1, z-1)) &&\n                    (z-2<0 || chunk.contains(x, y, z-2)))\n                    UpdaterBlock.removeSurfaceBlock(surfaceBlocks, chunk, x, y, z-1);\n            }\n        }\n        if (z < dimensions[2]) {\n            if (chunk.contains(x, y, z+1)) {\n                zp = true;\n                if ((x-1<0 || chunk.contains(x-1, y, z+1)) && (x+1>=dimensions[0] || chunk.contains(x+1, y, z+1)) &&\n                    (y-1<0 || chunk.contains(x, y-1, z+1)) && (y+1>=dimensions[1] || chunk.contains(x, y+1, z+1)) &&\n                    (z+2>=dimensions[2] || chunk.contains(x, y, z+2)))\n                    UpdaterBlock.removeSurfaceBlock(surfaceBlocks, chunk, x, y, z+1);\n            }\n        }\n\n        // Update current block.\n        if (!(xm && ym && xp && yp && zm && zp)) UpdaterBlock.addSurfaceBlock(surfaceBlocks, chunk, x, y, z);\n    }\n\n    // BLOCK DELETION\n    static updateSurfaceBlocksAfterDeletion(chunk, id, x, y, z) {\n        let surfaceBlocks = chunk.surfaceBlocks;\n        let dimensions = chunk.dimensions;\n        let xp = false; let xm = false;\n        let yp = false; let ym = false;\n        let zp = false; let zm = false;\n\n        // Update (x+1, x-1) blocks.\n        if (x > 0) {\n            if (chunk.contains(x-1, y, z)) {\n                xm = true;\n                if ((y-1<0 || chunk.contains(x-1, y-1, z)) && (y+1>=dimensions[1] || chunk.contains(x-1, y+1, z)) &&\n                    (z-1<0 || chunk.contains(x-1, y, z-1)) && (z+1>=dimensions[2] || chunk.contains(x-1, y, z+1)) &&\n                    (x-2<0 || chunk.contains(x-2, y, z)))\n                    UpdaterBlock.addSurfaceBlock(surfaceBlocks, chunk, x-1, y, z);\n            }\n        }\n        if (x < dimensions[0]) {\n            if (chunk.contains(x+1, y, z)) {\n                xp = true;\n                if ((y-1<0 || chunk.contains(x+1, y-1, z)) && (y+1>=dimensions[1] || chunk.contains(x+1, y+1, z)) &&\n                    (z-1<0 || chunk.contains(x+1, y, z-1)) && (z+1>=dimensions[2] || chunk.contains(x+1, y, z+1)) &&\n                    (x+2>=dimensions[0] || chunk.contains(x+2, y, z)))\n                    UpdaterBlock.addSurfaceBlock(surfaceBlocks, chunk, x+1, y, z);\n            }\n        }\n\n        // Update (y+1, y-1) blocks.\n        if (y > 0) {\n            if (chunk.contains(x, y-1, z)) {\n                ym = true;\n                if ((x-1<0 || chunk.contains(x-1, y-1, z)) && (x+1>=dimensions[0] || chunk.contains(x+1, y-1, z)) &&\n                    (z-1<0 || chunk.contains(x, y-1, z-1)) && (z+1>=dimensions[2] || chunk.contains(x, y-1, z+1)) &&\n                    (y-2<0 || chunk.contains(x, y-2, z)))\n                    UpdaterBlock.addSurfaceBlock(surfaceBlocks, chunk, x, y-1, z);\n            }\n        }\n        if (y < dimensions[1]) {\n            if (chunk.contains(x, y+1, z)) {\n                yp = true;\n                if ((x-1<0 || chunk.contains(x-1, y+1, z)) && (x+1>=dimensions[0] || chunk.contains(x+1, y+1, z)) &&\n                    (z-1<0 || chunk.contains(x, y+1, z-1)) && (z+1>=dimensions[2] || chunk.contains(x, y+1, z+1)) &&\n                    (y+2>=dimensions[1] || chunk.contains(x, y+2, z)))\n                    UpdaterBlock.addSurfaceBlock(surfaceBlocks, chunk, x, y+1, z);\n            }\n        }\n\n        // Update (z-1, z+1) blocks.\n        if (z > 0) {\n            if (chunk.contains(x, y, z-1)) {\n                zm = true;\n                if ((x-1<0 || chunk.contains(x-1, y, z-1)) && (x+1>=dimensions[0] || chunk.contains(x+1, y, z-1)) &&\n                    (y-1<0 || chunk.contains(x, y-1, z-1)) && (y+1>=dimensions[1] || chunk.contains(x, y+1, z-1)) &&\n                    (z-2<0 || chunk.contains(x, y, z-2)))\n                    UpdaterBlock.addSurfaceBlock(surfaceBlocks, chunk, x, y, z-1);\n            }\n        }\n        if (z < dimensions[2]) {\n            if (chunk.contains(x, y, z+1)) {\n                zp = true;\n                if ((x-1<0 || chunk.contains(x-1, y, z+1)) && (x+1>=dimensions[0] || chunk.contains(x+1, y, z+1)) &&\n                    (y-1<0 || chunk.contains(x, y-1, z+1)) && (y+1>=dimensions[1] || chunk.contains(x, y+1, z+1)) &&\n                    (z+2>=dimensions[2] || chunk.contains(x, y, z+2)))\n                    UpdaterBlock.addSurfaceBlock(surfaceBlocks, chunk, x, y, z+1);\n            }\n        }\n\n        // Update current block.\n        if (!(xm && ym && xp && yp && zm && zp)) // Was the current block a surface block?\n            UpdaterBlock.removeSurfaceBlock(surfaceBlocks, chunk, x, y, z);\n    }\n    \n}\n\nexport default UpdaterBlock;\n"]}