{"version":3,"sources":["../../../../../../server/app/engine/game3d/model_world/world.js"],"names":[],"mappings":"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","file":"world.js","sourcesContent":["/**\n *\n */\n\n'use strict';\n\nclass World {\n\n    constructor(id, worldModel) {\n\n        this._worldId = id; // Identifier\n        this._worldModel = worldModel;\n\n        // Chunk id (i+','+j+','+k) -> chunk\n        this._chunks = new Map();\n\n        // Keep same generation method\n        this._generationMethod = \"flat\";\n\n        // Constants\n        this._xSize = 16;\n        this._ySize = 16;\n        this._zSize = 32;\n    }\n\n    get worldId() { return this._worldId; }\n\n    get xSize() { return this._xSize; }\n    get ySize() { return this._ySize; }\n    get zSize() { return this._zSize; }\n\n    get allChunks() { return this._chunks; }\n    set allChunks(newChunks) { this._chunks = newChunks; }\n\n    get generationMethod() { return this._generationMethod; }\n    set generationMethod(newGenerationMethod) { this._generationMethod = newGenerationMethod; }\n\n    addChunk(id, chunk) {\n        this._chunks.set(id, chunk);\n    }\n\n    getChunkCoordinates(x, y, z) {\n        let f = Math.floor;\n        const dx = this.xSize, dy = this.ySize, dz = this.zSize;\n        return [f(x/dx), f(y/dy), f(z/dz)];\n    }\n\n    getChunkByCoordinates(x, y, z) {\n        let c = this.getChunkCoordinates(x, y, z);\n        return this.getChunk(...c);\n    };\n\n    whatBlock(x, y, z) {\n        let coords = this.getChunkCoordinates(x, y, z);\n\n        const dx = this.xSize, dy = this.ySize, dz = this.zSize;\n        const i = coords[0], j = coords[1], k = coords[2];\n\n        const chunkX = x - i * dx;\n        const chunkY = y - j * dy;\n        const chunkZ = z - k * dz;\n\n        const chunkId = i+','+j+','+k;\n        let chunk = this._chunks.get(chunkId);\n        if (!chunk || chunk === undefined) {console.log('ChkMgr@whatBlock: could not find chunk ' + chunkId +\n            ' from ' + x+','+y+','+z);\n            // TODO [MEDIUM] load concerned chunk.\n            // TODO [MEDIUM] check minus\n            return;\n        }\n\n        return chunk.what(chunkX, chunkY, chunkZ);\n    }\n\n    getFreePosition() {\n        let zLimit = this._zSize;\n        let z = zLimit - 2;\n        while (this.whatBlock(4, 4, z) !== 0 && z < zLimit) ++z;\n        return [4.5, 4.5, z];\n    }\n\n    getChunk(iCoordinate, jCoordinate, kCoordinate) {\n        let id = iCoordinate+','+jCoordinate+','+kCoordinate;\n        return this._chunks.get(id);\n    }\n\n    getChunkById(chunkId) {\n        return this._chunks.get(chunkId);\n    }\n\n    hasChunkById(chunkId) {\n        return this._chunks.has(chunkId);\n    }\n\n    hasChunk(i, j, k) {\n        return !!(this.getChunk(i, j, k));\n    }\n\n    isFree(p) {\n        return this.whatBlock(p[0], p[1], p[2]) === 0; // && this.whatBlock(p[0], p[1], p[2]+1) === 0;\n    }\n\n}\n\nexport default World;\n"]}