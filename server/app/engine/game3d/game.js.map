{"version":3,"sources":["../../../../../server/app/engine/game3d/game.js"],"names":[],"mappings":"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","file":"game.js","sourcesContent":["/**\n *\n */\n\n'use strict';\n\nimport Game              from '../../model/game/game';\n\nimport UserInput         from './io_user/input/input';\nimport UserOutput        from './io_user/output/output';\nimport AIInput           from './io_ai/input/input';\nimport AIOutput          from './io_ai/output/output';\nimport AI                from './io_ai/ai';\n\nimport PhysicsEngine     from './engine_physics/physics';\nimport TopologyEngine    from './engine_topology/topology';\nimport ConsistencyEngine from './engine_consistency/consistency';\n\nimport EntityModel      from './model_entity/model';\nimport WorldModel       from './model_world/model';\nimport XModel           from './model_x/model';\nimport ConsistencyModel from './model_consistency/model';\n\nimport Chat             from './../../model/connection/chat';\n\nclass Game3D extends Game {\n\n    constructor(hub, gameId, connector) {\n        super(hub, gameId, connector);\n\n        // Utility parameters\n        this._kind = 'game3d';\n        this._refreshRate = 16;\n        this._tt = 0;\n\n        // Misc.\n        this._chat = new Chat(this);\n\n        // Models (autonomous).\n        this._worldModel        = new WorldModel(this);\n        this._entityModel       = new EntityModel(this);\n        this._xModel            = new XModel(this);     // Needs world model.\n        this._consistencyModel  = new ConsistencyModel(this);\n\n        // Engines (need models).\n        this._ai                = new AI(this);\n        this._physicsEngine     = new PhysicsEngine(this);\n        this._topologyEngine    = new TopologyEngine(this);\n        this._consistencyEngine = new ConsistencyEngine(this);\n\n        // I/O (need engines).\n        this._internalInput     = new AIInput(this);    // A.I.\n        this._internalOutput    = new AIOutput(this);   // A.I.\n        this._externalInput     = new UserInput(this);  // Human.\n        this._externalOutput    = new UserOutput(this); // Human.\n\n        // Generate then listen players.\n        this.generate();\n    }\n\n    // Model\n\n    get entityModel()       { return this._entityModel; }\n    get worldModel()        { return this._worldModel; }\n    get xModel()            { return this._xModel; }\n    get consistencyModel()  { return this._consistencyModel; }\n\n    get physicsEngine()     { return this._physicsEngine; }\n    get topologyEngine()    { return this._topologyEngine; }\n    get consistencyEngine() { return this._consistencyEngine; }\n\n    get chat()              { return this._chat; }\n\n    static bench = false;\n\n    //^\n    update() {\n        // Idea maybe split in several loops (purposes).\n        let t;\n        let dt1, dt2, dt3, dt4, dt5;\n\n        /** Inputs **/\n        t = process.hrtime();\n        this._ai.update();                // Update intents.\n        dt1 = (process.hrtime(t)[1]/1000);\n        if (Game3D.bench && dt1 > 1000) console.log(dt1 +' µs to update intents.');\n\n        t = process.hrtime();\n        this._externalInput.update();     // Update human spawn/leave requests.\n        this._internalInput.update();     // Update artificial inputs.\n        dt2 = (process.hrtime(t)[1]/1000);\n        if (Game3D.bench && dt2 > 1000) console.log(dt2 +' µs to update inputs.');\n\n        /** Updates **/\n        t = process.hrtime();\n        this._topologyEngine.update();    // Update topological model.\n        this._physicsEngine.update();     // Update physical simulation.\n        dt3 = (process.hrtime(t)[1]/1000);\n        if (Game3D.bench && dt3 > 1000) console.log(dt3 +' µs to update engines.');\n\n        /** Consistency solving: mediator between player and server models **/\n        t = process.hrtime();\n        this._consistencyEngine.update(); // Make client models consistent. Needs other engines.\n        dt4 = (process.hrtime(t)[1]/1000);\n        if (Game3D.bench && dt4 > 10000) console.log(dt4 +' µs to update consistency.');\n\n        /** Outputs **/\n        t = process.hrtime();\n        this._externalOutput.update();    // Send updates.\n        this._internalOutput.update();    // Update perceptions.\n        dt5 = (process.hrtime(t)[1]/1000);\n        if (Game3D.bench && dt5 > 1000) console.log(dt5 +' µs to update outputs.');\n\n        // var n = this._playerManager.nbPlayers;\n        // console.log(\"There \" + (n>1?\"are \":\"is \") + n + \" player\" + (n>1?\"s\":\"\") + \" connected.\");\n        // this._tt += 1;\n        // if (this._tt % 1000 === 0) console.log((process.hrtime(time)[1]/1000) + \" µs a loop.\");\n    }\n\n    generate() {\n        this._consistencyEngine.generateWorld()\n            .then(_ => {\n                this._playerManager.setAddPlayerBehaviour(p => {\n                    this._externalInput.addPlayer(p);\n                });\n\n                this._playerManager.setRemovePlayerBehaviour(player => {\n                    this._externalInput.removePlayer(player.avatar.id);\n                });\n\n                this._ready = true;\n            })\n            .catch(e => console.log(e));\n    }\n\n    save() {\n        // TODO [LONG-TERM] write world into file.\n    }\n\n}\n\nexport default Game3D;\n"]}