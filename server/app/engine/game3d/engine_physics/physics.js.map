{"version":3,"sources":["../../../../../../server/app/engine/game3d/engine_physics/physics.js"],"names":[],"mappings":";;;;AAIA;;;;;;;;;;;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;;;IAEM;AAEF,aAFE,aAEF,CAAY,IAAZ,EAAkB;4CAFhB,eAEgB;;;AAEd,aAAK,YAAL,GAAsB,KAAK,WAAL,CAFR;AAGd,aAAK,WAAL,GAAsB,KAAK,UAAL,CAHR;AAId,aAAK,OAAL,GAAsB,KAAK,MAAL;;;AAJR,YAOd,CAAK,YAAL,GAAsB,4BAAtB,CAPc;AAQd,aAAK,aAAL,GAAsB,6BAAtB;;;AARc,YAWd,CAAK,QAAL,GAAsB,sBAAY,IAAZ,CAAtB;AAXc,YAYd,CAAK,OAAL,GAAsB,qBAAW,IAAX,CAAtB;AAZc,KAAlB;;+BAFE;;iCAqBO,MAAM,QAAQ;AACnB,iBAAK,YAAL,CAAkB,QAAlB,CAA2B,IAA3B,EAAiC,MAAjC,EADmB;;;;iCAId;AACL,iBAAK,QAAL,CAAc,MAAd,CAAqB,KAAK,YAAL,CAAkB,QAAlB,EAArB,EADK;;AAGL,iBAAK,OAAL,CAAa,KAAb,GAHK;;AAKL,iBAAK,YAAL,CAAkB,KAAlB,GALK;;;;oCAQG;AACR,mBAAO,KAAK,aAAL,CAAmB,SAAnB,EAAP,CADQ;;;;sCAIE;AACV,iBAAK,aAAL,CAAmB,WAAnB,CAA+B,KAAK,YAAL,CAAkB,QAAlB,CAA/B,CADU;;;;yCAIG;AACb,iBAAK,OAAL,CAAa,cAAb,GADa;;;;4BAxBG;AAAE,mBAAO,KAAK,YAAL,CAAT;;;;4BACA;AAAE,mBAAO,KAAK,WAAL,CAAT;;;;4BACA;AAAE,mBAAO,KAAK,aAAL,CAAT;;;WAnBlB;;;kBA+CS","file":"physics.js","sourcesContent":["/**\n *\n */\n\n'use strict';\n\nimport InputBuffer      from './input_buffer';\nimport OutputBuffer     from './output_buffer';\n\nimport Solver           from './solver/solver';\nimport Updater          from './updater/updater';\n\nclass PhysicsEngine {\n\n    constructor(game) {\n        // Models.\n        this._entityModel   = game.entityModel;\n        this._worldModel    = game.worldModel;\n        this._xModel        = game.xModel;\n\n        // Buffers.\n        this._inputBuffer   = new InputBuffer();\n        this._outputBuffer  = new OutputBuffer();\n\n        // Engine.\n        this._updater       = new Updater(this); // Parses input and updates model constraints.\n        this._solver        = new Solver(this);  // Updates physical model.\n    }\n\n    get entityModel()   { return this._entityModel; }\n    get worldModel()    { return this._worldModel; }\n    get outputBuffer()  { return this._outputBuffer; }\n\n    addInput(meta, avatar) {\n        this._inputBuffer.addInput(meta, avatar)\n    }\n\n    update() {\n        this._updater.update(this._inputBuffer.getInput());\n\n        this._solver.solve();\n\n        this._inputBuffer.flush();\n    }\n\n    getOutput() {\n        return this._outputBuffer.getOutput();\n    }\n\n    flushOutput() {\n        this._outputBuffer.flushOutput(this._entityModel.entities);\n    }\n\n    shuffleGravity() {\n        this._solver.shuffleGravity();\n    }\n\n}\n\nexport default PhysicsEngine;\n"]}