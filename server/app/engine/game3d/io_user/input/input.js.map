{"version":3,"sources":["../../../../../../../server/app/engine/game3d/io_user/input/input.js"],"names":[],"mappings":"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","file":"input.js","sourcesContent":["/**\n *\n */\n\n'use strict';\n\nclass UserInput {\n\n    constructor(game) {\n        this._game = game;\n        \n        this._physicsEngine     = game.physicsEngine;\n        this._topologyEngine    = game.topologyEngine;\n        this._consistencyEngine = game.consistencyEngine;\n        this._chat              = game.chat;\n\n        this._listeners = {}; // TODO [HIGH] Map.\n        this._playerUpdateBuffer = [];\n    }\n\n    // Update change in player connection / disconnection.\n    update() {\n        let consistencyEngine = this._consistencyEngine;\n        let addedOrRemovedPlayers = this._playerUpdateBuffer;\n        // WARN: short-circuits physics engine update.\n        addedOrRemovedPlayers.forEach(update => {\n            let type = update[0];\n            let player = update[1];\n\n            // Spawn and then listen.\n            if (type === 'connect') {\n                consistencyEngine.spawnPlayer(player);\n                this.listenPlayer(player);\n            }\n\n            // Despawn.\n            else if (type === 'disconnect') {\n                // Dispensable to unlisten: a disconnected player has purged its playerConnection.\n                // this.unlistenPlayer(player);\n                consistencyEngine.despawnPlayer(player); // player = playerId\n            }\n        });\n\n        // Flush.\n        this._playerUpdateBuffer = [];\n    }\n\n    addPlayer(player) {\n        this._playerUpdateBuffer.push(['connect', player]);\n    }\n\n    removePlayer(playerId) {\n        this._playerUpdateBuffer.push(['disconnect', playerId]);\n    }\n\n    pushToEngine(kind, avatar, engine) {\n        return (data => {\n            engine.addInput({action: kind, meta: data}, avatar);\n        });\n    }\n\n    listenPlayer(player) {\n        let physicsEngine       = this._physicsEngine;\n        let topologyEngine      = this._topologyEngine;\n        let consistencyEngine   = this._consistencyEngine;\n        let avatar = player.avatar;\n\n        let listener = this._listeners[player] = [\n            this.pushToEngine('move',   avatar, physicsEngine),\n            this.pushToEngine('rotate', avatar, physicsEngine),\n            this.pushToEngine('block',  avatar, topologyEngine),\n            this.pushToEngine('gate',  avatar, consistencyEngine),\n            this.pushToEngine('action', avatar, physicsEngine),\n\n            this._chat.playerInput(player)\n        ];\n\n        let i = 0;\n        player.on('m', listener[i++]);\n        player.on('r', listener[i++]);\n        player.on('b', listener[i++]);\n        player.on('x', listener[i++]);\n        player.on('a', listener[i++]);\n        player.on('chat', listener[i++]);\n    }\n\n    unlistenPlayer(player) {\n        // Do not modify queue.\n        // Drop inconsistent players when an update is performed.\n        let listener = this._listeners[player];\n        if (!listener) {\n            console.log('WARN: a player which was not listened to left.');\n            return;\n        }\n\n        let i = 0;\n        player.off('m', listener[i++]);\n        player.off('r', listener[i++]);\n        player.off('b', listener[i++]);\n        player.off('x', listener[i++]);\n        player.off('a', listener[i++]);\n        player.off('chat', listener[i++]);\n\n        delete this._listeners[player];\n    }\n\n}\n\nexport default UserInput;\n"]}