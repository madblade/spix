{"version":3,"sources":["../../../../../../../server/app/engine/game3d/engine_consistency/generator/generator_test.js"],"names":[],"mappings":"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","file":"generator_test.js","sourcesContent":["/**\n *\n */\n\n'use strict';\n\nimport ChunkGenerator from './chunkgenerator';\n\nclass Test {\n\n    static testMerge(chunk) {\n        const dx = chunk.dimensions[0];\n        const dy = chunk.dimensions[1];\n        const ijS = dx * dy;\n        const numberOfBlocks = chunk.capacity;\n\n        let blocks = new Uint8Array(numberOfBlocks);\n\n        blocks.fill(1, 0, ijS*40);\n\n        for (let k = 0; k<6; ++k) {\n            for (let i = 0; i<2; ++i) {\n                for (let j = 0; j<2; ++j) {\n                    blocks[ijS*40-10-i-j*dx-k*dx*dy] = 0;\n                }\n            }\n        }\n\n        for (let k = 0; k<6; ++k) {\n            for (let i = 0; i<2; ++i) {\n                for (let j = 0; j<2; ++j) {\n                    blocks[ijS*40-42-i-j*dx-k*dx*dy] = 0;\n                }\n            }\n        }\n\n        for (let k = 0; k<6; ++k) {\n            for (let i = 0; i<2; ++i) {\n                for (let j = 0; j<2; ++j) {\n                    blocks[ijS*40-28-i-j*dx-k*dx*dy] = 0;\n                }\n            }\n        }\n\n        chunk.blocks = blocks;\n    }\n\n    static testChunk(chunk) {\n        const dx = chunk.dimensions[0];\n        const dy = chunk.dimensions[1];\n        const ijS = dx * dy;\n        const numberOfBlocks = chunk.capacity;\n\n        let blocks = new Uint8Array(numberOfBlocks);\n\n        const idx1 = ijS*48 + dx*4+4;\n        blocks[idx1] = 1;\n        blocks[idx1 + ijS] = 0;\n        blocks[idx1 + 2*ijS] = 1;\n\n        blocks[idx1-1] = 1;\n        blocks[idx1+1] = 1;\n\n        blocks[idx1+1+ijS] = 1;\n        blocks[idx1+1+2*ijS] = 1;\n\n        blocks[idx1-1+ijS] = 1;\n        blocks[idx1-1+2*ijS] = 1;\n\n        blocks[idx1-1+ijS+dx] = 1;\n        blocks[idx1-1+ijS-dx] = 1;\n        blocks[idx1-1+2*ijS+dx] = 1;\n        blocks[idx1-1+2*ijS-dx] = 1;\n\n        blocks[idx1+1+ijS+dx] = 1;\n        blocks[idx1+1+ijS-dx] = 1;\n        blocks[idx1+1+2*ijS+dx] = 1;\n        blocks[idx1+1+2*ijS-dx] = 1;\n\n        blocks[idx1+ijS+dx] = 1;\n        blocks[idx1+ijS-dx] = 1;\n        blocks[idx1+2*ijS+dx] = 1;\n        blocks[idx1+2*ijS-dx] = 1;\n\n\n        blocks[idx1-1+dx] = 1;\n        blocks[idx1+1+dx] = 1;\n        blocks[idx1-1-dx] = 1;\n        blocks[idx1+1-dx] = 1;\n        blocks[idx1+dx] = 1;\n        blocks[idx1-dx] = 1;\n\n        chunk.blocks = blocks;\n    }\n\n}\n\nexport default Test;\n"]}