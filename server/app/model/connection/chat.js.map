{"version":3,"sources":["../../../../../server/app/model/connection/chat.js"],"names":[],"mappings":";;;;AAIA;;;;;;;;;;;;;;;;IAEM;AAEF,aAFE,IAEF,CAAY,IAAZ,EAAkB;4CAFhB,MAEgB;;AACd,aAAK,KAAL,GAAa,IAAb,CADc;AAEd,aAAK,kBAAL,GAA0B,EAA1B,CAFc;KAAlB;;+BAFE;;4BAOE,SAAS;AACT,oBAAQ,GAAR,CAAY,QAAQ,KAAK,KAAL,CAAW,MAAX,GAAoB,IAA5B,GAAmC,OAAnC,CAAZ,CADS;;;;sCAIC;AACV,mBAAO,KAAK,kBAAL,CAAwB,MAAxB,GAAiC,CAAjC,CADG;;;;uCAIC;;AAEX,gBAAI,KAAK,WAAL,EAAJ,EAAwB;;aAAxB;;;;;;;;;;;;oCAWQ,QAAQ;;;;AAEhB,mBAAO,UAAC,IAAD,EAAU;;;;;AAKb,sBAAK,GAAL,CAAS,sBAAsB,IAAtB,GAA6B,QAA7B,GAAwC,OAAO,IAAP,CAAY,EAAZ,CAAjD,CALa;aAAV,CAFS;;;;kCAWV,MAAM,MAAM;AAClB,gBAAI,OAAO,KAAK,KAAL,CADO;AAElB,iBAAK,UAAL,CAAgB,EAAhB,CAAmB,EAAnB,CAAsB,KAAK,MAAL,CAAtB,CAAmC,IAAnC,CAAwC,IAAxC,EAA8C,IAA9C,EAFkB;;;WAvCpB;;;kBA8CS","file":"chat.js","sourcesContent":["/**\n *\n */\n\n'use strict';\n\nclass Chat {\n\n    constructor(game) {\n        this._game = game;\n        this._temporaryMessages = [];\n    }\n\n    log(message) {\n        console.log('On ' + this._game.gameId + ': ' + message);\n    }\n\n    hasMessages() {\n        return this._temporaryMessages.length > 0;\n    }\n\n    updateOutput() {\n        // TODO [LOW] transmit updates to clients.\n        if (this.hasMessages()) {\n            // broadcast('chat', ...)\n        }\n    }\n\n    /**\n     * @param player\n     * A player knows its user (player.user)\n     * A user has an id (user.id)\n     * @returns {Function}\n     */\n    playerInput(player) {\n        // TODO [LOW] log input into temporaryMessages.\n        return (data) => {\n            // Important: don't send responses immediately on input.\n            // Store history of received messages in a temporary variable,\n            // then wait for server to call 'updateOutput' method after it\n            // has finished rendering current game state.\n            this.log('received message ' + data + ' from ' + player.user.id);\n        };\n    }\n\n    broadcast(kind, data) {\n        let game = this._game;\n        game.connection.io.to(game.gameId).emit(kind, data);\n    }\n\n}\n\nexport default Chat;\n"]}