{"version":3,"sources":["../../../../../server/app/model/client/user_db.js"],"names":[],"mappings":";;;;AAIA;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AACA;;;;;;IAEM;AAEF,aAFE,YAEF,CAAY,SAAZ,EAAuB;4CAFrB,cAEqB;;AACnB,aAAK,WAAL,GAAmB,SAAnB,CADmB;AAEnB,aAAK,MAAL,GAAc,mBAAd,CAFmB;KAAvB;;+BAFE;;qCAOW,MAAM;AACf,mBAAO,KAAK,MAAL,CAAY,GAAZ,CAAgB,KAAK,EAAL,CAAvB,CADe;;;;;;;;;;;qCASN,QAAQ;AACjB,gBAAI,QAAQ,KAAK,MAAL,CADK;AAEjB,gBAAI,OAAO,EAAP,CAFa;AAGjB,gBAAI,KAAK,sBAAgB,UAAhB,CAA2B,KAA3B,CAAL,CAHa;AAIjB,gBAAI,MAAM,KAAK,WAAL,CAAiB,GAAjB,CAJO;AAKjB,gBAAI,OAAO,kBAAQ,UAAR,CAAmB,GAAnB,EAAwB,MAAxB,EAAgC,IAAhC,EAAsC,EAAtC,CAAP,CALa;;AAOjB,kBAAM,GAAN,CAAU,EAAV,EAAc,IAAd,EAPiB;AAQjB,mBAAO,IAAP,CARiB;;;;gCAWb,IAAI;AACR,mBAAO,KAAK,MAAL,CAAY,GAAZ,CAAgB,EAAhB,CAAP,CADQ;;;;mCAID,MAAM;;AAEb,iBAAK,MAAL,CAAY,MAAZ,CAAmB,KAAK,EAAL,CAAnB,CAFa;AAGb,iBAAK,OAAL,GAHa;;;;2CAME,MAAM,IAAI;AACzB,gBAAI,OAAO,EAAP,CADqB;AAEzB,iBAAK,IAAL,IAAa,CAAC,EAAD,CAAb,CAFyB;;AAIzB,gBAAI,QAAQ,KAAK,MAAL,CAJa;AAKzB,kBAAM,OAAN,CAAc,UAAC,IAAD,EAAO,MAAP,EAAkB;AAC7B,qBAAK,IAAL,CAAU,KAAV,EAAiB,yBAAe,IAAf,CAAjB,EAD6B;aAAlB,CAAd,CALyB;;;WArC3B;;;kBAiDS","file":"user_db.js","sourcesContent":["/**\n * DB.\n */\n\n'use strict';\n\nimport Factory from './../factory';\nimport CollectionUtils from '../../engine/math/collections';\n\nclass UserDataBase {\n\n    constructor(connector) {\n        this._connection = connector;\n        this._users = new Map();\n    }\n\n    containsUser(user) {\n        return this._users.has(user.id);\n    }\n\n    /**\n     * Injects a socket into the user model.\n     * Registers the user (a socket knows its user since the connection).\n     * @param socket\n     */\n    registerUser(socket) {\n        let users = this._users;\n        let nick = \"\";\n        let id = CollectionUtils.generateId(users);\n        let hub = this._connection.hub;\n        var user = Factory.createUser(hub, socket, nick, id);\n\n        users.set(id, user);\n        return user;\n    }\n\n    getUser(id) {\n        return this._users.get(id);\n    }\n\n    removeUser(user) {\n        // Remove references to this user\n        this._users.delete(user.id);\n        user.destroy();\n    }\n\n    notifyGameCreation(kind, id) {\n        var game = {};\n        game[kind] = [id];\n\n        let users = this._users;\n        users.forEach((user, userId) => {\n           user.send('hub', JSON.stringify(game));\n        });\n    }\n\n}\n\nexport default UserDataBase;\n"]}